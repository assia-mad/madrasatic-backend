# Generated by Django 4.0.3 on 2022-06-13 14:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Myuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Utilisateur', 'User'), ('Responsable', 'Responsable'), ('Admin', 'Admin'), ('Service', 'Service')], default=('Utilisateur', 'User'), max_length=30)),
                ('address', models.CharField(blank=True, max_length=150)),
                ('tel', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'only numbers are allowed')])),
                ('is_banned', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='user_img')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.TextField(null=True)),
                ('corps', models.TextField(null=True)),
                ('pubDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('dateFin', models.DateTimeField()),
                ('etat', models.CharField(choices=[('brouillon', 'Brouillon'), ('publiée', 'Publiée')], default='brouillon', max_length=100)),
                ('image', models.ImageField(null=True, upload_to='annonces_images/')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pubDate',),
            },
        ),
        migrations.CreateModel(
            name='Bloc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocc', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Endroit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endroit', models.CharField(max_length=50, null=True)),
                ('blocc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='madrasaticApp.bloc')),
            ],
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=100, null=True)),
                ('endroit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='madrasaticApp.endroit')),
            ],
        ),
        migrations.CreateModel(
            name='MDeclaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priorité', models.CharField(choices=[(1, 'Urgence'), (2, 'Etat critique'), (3, 'Etat normal')], default='Etat normal', max_length=30)),
                ('objet', models.TextField(null=True)),
                ('corps', models.TextField(null=True)),
                ('publiée', models.DateTimeField(default=django.utils.timezone.now)),
                ('etat', models.CharField(choices=[('brouillon', 'Brouillon'), ('publiée', 'Publiée'), ('non traitée', 'non traitée'), ('en cours de traitement', 'en cours de traitement'), ('traitée', 'traitée'), ('rejetée', 'rejetée'), ('incompléte', 'incompléte')], default='brouillon', max_length=100)),
                ('image', models.ImageField(null=True, upload_to='declaration_images/')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bloc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declaration_bloc', to='madrasaticApp.bloc')),
                ('catégorie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='declaration_categorie', to='madrasaticApp.category')),
                ('confirmée_par', models.ManyToManyField(related_name='users_who_confirmed', to=settings.AUTH_USER_MODEL)),
                ('endroit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declaration_endroit_type', to='madrasaticApp.endroit')),
                ('lieu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declaration_place', to='madrasaticApp.identification')),
                ('parent_declaration', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='declaration.parent_declaration+', to='madrasaticApp.mdeclaration')),
                ('signalée_par', models.ManyToManyField(related_name='users_who_signaled', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-publiée', '-priorité'),
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('desc', models.TextField()),
                ('status', models.CharField(choices=[('brouillon', 'Brouillon'), ('publié', 'Publié'), ('validé', 'validé'), ('incomplet', 'incomplet')], default='publié', max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='report_images/', verbose_name='report_image')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('declaration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='madrasaticApp.mdeclaration')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportRejection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rejection', to='madrasaticApp.report')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_rejection', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportComplementdemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complement_demands', to='madrasaticApp.report')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_complement_demands', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('body', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification.responsable+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification.service+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification.user+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MDeclarationRejection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('declaration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rejection', to='madrasaticApp.mdeclaration')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declarations_rejections', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mdeclaration',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declaration_site', to='madrasaticApp.site'),
        ),
        migrations.CreateModel(
            name='DeclarationComplementDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complement_demands', to='madrasaticApp.mdeclaration')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declarations_complement_demands', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bloc',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='madrasaticApp.site'),
        ),
        migrations.CreateModel(
            name='AnnonceRejection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('annonce', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rejection', to='madrasaticApp.annoncemodel')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonce_rejection', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
